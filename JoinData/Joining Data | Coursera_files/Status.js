"use strict";define("bundles/programming/components/Status",["require","exports","module","react-with-addons","underscore","bundles/iconfont/Icon","js/lib/coursera.react-intl","i18n!nls/programming","css!bundles/programming/components/__styles__/GradeHistory.css"],function(require,exports,module){var e=require("react-with-addons"),_=require("underscore"),t=require("bundles/iconfont/Icon"),n=require("js/lib/coursera.react-intl"),s=require("i18n!nls/programming");require("css!bundles/programming/components/__styles__/GradeHistory.css");var r=n.FormattedMessage,a=e.createClass({displayName:"Status",renderStatus:function renderStatus(){var n=this.props,c=n.learnerAssignment,p=n.itemProgress,d=n.itemGrade,m=n.verificationDisplay,l=n.submissionSummaries,E=this.props.itemMetadata.getTypeName();if(!l)return null;var a=c.maxScore,o=c.passingScore,u=d.get("verifiedOutcome"),S=m&&m.shouldPromptForVerification(),f=u&&u.isPassed,i=l.find(function(e,s){return e.get("isBestSubmission")||e.get("isUsedForGrading")});if(i&&_(["Started","Completed"]).contains(p.get("progressState"))){var v=i.get("score")>=o;if(v){var g=function statusLabel(){return"ungradedProgramming"===E?e.createElement(r,{message:s("Passed")}):S?f?e.createElement(r,{message:s("Passed and verified")}):e.createElement(r,{message:s("Passed but not verified")}):e.createElement(r,{message:s("Passed")})};return e.createElement("div",null,e.createElement("span",{className:"is-used-for-grade-indicator"},e.createElement(t,{name:"check"})),g(),e.createElement("span",null," · "),e.createElement(r,{message:s("{score}/{maxScore} points"),score:i.get("score"),maxScore:a}))}return e.createElement("div",null,e.createElement("div",null,e.createElement(r,{message:s("Try Again")}),e.createElement("span",null," · "),e.createElement("span",null,i.get("score")+"/"+a," ",s("points earned"))),e.createElement("div",null,e.createElement(r,{message:s("You must earn {passingScore}/{maxScore} points to pass."),passingScore:o,maxScore:a})))}return e.createElement(r,{message:s("You have not submitted. You must earn {passingScore}/{maxScore} points to pass."),passingScore:o,maxScore:a})},render:function render(){return e.createElement("div",{className:"rc-Status"},this.renderStatus())}});module.exports=a});