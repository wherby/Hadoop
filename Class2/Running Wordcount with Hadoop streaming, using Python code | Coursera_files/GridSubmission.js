"use strict";define("bundles/programming/components/GridSubmission",["require","exports","module","react-with-addons","underscore","bundles/ondemand/utils/assignmentVerificationTest","bundles/ondemand/utils/assignmentVerificationTest","bundles/phoenix/components/Modal","bundles/phoenix/components/OrigamiRegion","bundles/phoenix/lib/multitrackerMixin","bundles/phoenix/utils/templateTags","bundles/programming/components/GridSubmissionUploadTable","bundles/verification/viewModels/verificationModule","bundles/verification/views/verificationModule","i18n!nls/programming","css!bundles/programming/components/__styles__/GridSubmission.css"],function(require,exports,module){var e=require("react-with-addons"),_=require("underscore"),l=require("bundles/ondemand/utils/assignmentVerificationTest"),m=l.fetchVerifiableIdAndVerifyAssignment,n=require("bundles/ondemand/utils/assignmentVerificationTest"),o=n.inHonorCodeVariant,s=require("bundles/phoenix/components/Modal"),r=require("bundles/phoenix/components/OrigamiRegion"),a=require("bundles/phoenix/lib/multitrackerMixin"),b=require("bundles/phoenix/utils/templateTags"),u=require("bundles/programming/components/GridSubmissionUploadTable"),d=require("bundles/verification/viewModels/verificationModule"),p=require("bundles/verification/views/verificationModule"),t=require("i18n!nls/programming");require("css!bundles/programming/components/__styles__/GridSubmission.css");var f=b.TRIM,i=function getMetadata(e){return function(){return this.props.itemMetadata.get(e)}},c=e.createClass({displayName:"GridSubmission",propTypes:{verificationViewModel:e.PropTypes.object,verificationDisplay:e.PropTypes.object,itemMetadata:e.PropTypes.object,inputViewModel:e.PropTypes.object,filesWorkspace:e.PropTypes.object,learnerAssignment:e.PropTypes.object,viewModel:e.PropTypes.object,canOptOut:e.PropTypes.bool,isVerifiable:e.PropTypes.bool,onSubmit:e.PropTypes.func},mixins:[a],multitracker:{namespace:"open_course_item.programing_grid_submissions",baseValues:["open_course_id","module_id","lesson_id","item_id"],definitions:{open_course_id:i("course.id"),module_id:i("lesson.module.id"),lesson_id:i("lesson.id"),item_id:i("id")},events:{upload:[],upload_error:[],submit:[],submit_error:[]}},getInitialState:function getInitialState(){return{inputDisabled:!1,currentUploadCount:0}},componentDidMount:function componentDidMount(){this.props.inputViewModel.on("change:inputDisabled",this.updateInputs),this.props.isVerifiable&&(this.verificationViewModel=this.props.verificationViewModel||new d({verificationDisplay:this.props.verificationDisplay,metadata:this.props.itemMetadata,canOptOut:void 0===this.props.canOptOut?!0:this.props.canOptOut}),this.verificationViewModel.on("verificationComplete",this.onVerificationComplete))},componentWillUnmount:function componentWillUnmount(){this.props.inputViewModel.off("change:inputDisabled",this.updateInputs)},updateInputs:function updateInputs(){this.setState({inputDisabled:this.props.inputViewModel.get("inputDisabled")})},onVerificationComplete:function onVerificationComplete(e){this.setState({isVerifying:!1}),this.submit(e)},verifyToSubmit:function verifyToSubmit(){this.props.isVerifiable&&!this.verifiableId?o()?m(this.verificationViewModel):this.setState({isVerifying:!0}):this.submit()},submit:function submit(e){e&&(this.verifiableId=e.hasVerified&&this.verificationViewModel.get("verifiableId")),this.track("submit"),this.props.viewModel.submit(this.verifiableId).then(this.onSubmitSuccess,this.onSubmitError).done()},onSubmitSuccess:function onSubmitSuccess(){this.props.onSubmit&&this.props.onSubmit()},onSubmitError:function onSubmitError(e){throw this.track("submit_error"),e},onUploadSelect:function onUploadSelect(){this.setState({currentUploadCount:this.state.currentUploadCount+1})},onPostUploadPartSuccess:function onPostUploadPartSuccess(e){this.track("upload"),this.setState({currentUploadCount:this.state.currentUploadCount-1})},onUploadError:function onUploadError(e){this.track("upload_error"),this.setState({currentUploadCount:this.state.currentUploadCount-1})},onVerificationModalClose:function onVerificationModalClose(){this.setState({isVerifying:!1})},render:function render(){var i=this.props,n=i.filesWorkspace,m=i.itemMetadata,f=i.inputViewModel,d=i.learnerAssignment,l=i.viewModel,o=this.state,b=o.currentUploadCount,a=o.inputDisabled,h=o.isVerifying,g=n&&_(n.get("parts")).some(function(e){return"uploaded"==e.typeName}),c=!g||b>0||a;return e.createElement("div",{className:"rc-GridSubmission"},e.createElement("p",null,t("To upload a file, click the part below. Then, submit the files. You\n               can submit as many times as you like. You do not need to upload all\n               parts in order to submit.")),e.createElement("div",{className:"submission-area"},e.createElement(u,{itemMetadata:m,filesWorkspace:n,learnerAssignment:d,viewModel:l,inputViewModel:f,inputDisabled:a,onUploadSelect:this.onUploadSelect,onPostUploadPartSuccess:this.onPostUploadPartSuccess,onUploadError:this.onUploadError}),e.createElement("button",{className:"submit-button primary fullbleed",onClick:this.verifyToSubmit,disabled:c},t("Submit"))),h&&e.createElement(s,{modalName:"Programming Assignment Submission",handleClose:this.onVerificationModalClose},e.createElement("h2",{className:"title"},t("Verify to Submit")),e.createElement(r,{renderOnce:!0,ViewClass:p,viewOptions:{verificationViewModel:this.verificationViewModel}})))}});module.exports=c});